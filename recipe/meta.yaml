{% set name = "mlflow" %}
{% set version = "3.1.3" %}

package:
  name: mlflow-split
  version: {{ version }}

source:
  url: https://github.com/mlflow/mlflow/archive/refs/tags/v{{ version }}.zip
  sha256: fb274de073ae7280fd184715e413938bd53624d0a2c26519e9f33712a9da1ea5
  patches:
    - 0001-Build-leaner-source-maps.patch

build:
  number: 0

outputs:
  - name: mlflow-skinny
    script: build-mlflow.sh  # [unix]
    script: build-mlflow.bat  # [win]
    version: {{ version }}
    build:
      entry_points:
        - mlflow=mlflow.cli:cli
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - pip
        - python
        - setuptools
      run:
        - cachetools <6,>=5.0.0
        - click <9,>=7.0
        - cloudpickle <4
        - databricks-sdk <1,>=0.20.0
        - gitpython <4,>=3.1.9
        - importlib-metadata <9,>=3.7.0,!=4.7.0
        - opentelemetry-api <3,>=1.9.0
        - opentelemetry-sdk <3,>=1.9.0
        - packaging <25
        - protobuf <6,>=3.12.0
        - pydantic <3,>=1.10.8
        - pyyaml <7,>=5.1
        - requests <3,>=2.17.3
        - sqlparse <1,>=0.4.0
        - typing-extensions <5,>=4.0.0
        - fastapi <1
        - uvicorn <1
      run_constrained:
        # mlflow[gateway] requirements as it is auto-imported if all dependencies are met
        # See https://github.com/mlflow/mlflow/blob/045ab98cb4c08e71f0d740a0d5a033d6c69dcf8c/mlflow/__init__.py#L244-L249
        - watchfiles <2
        - aiohttp <4
        - boto3 >=1.28.56,<2
    test:
      imports:
        - mlflow
        - mlflow.entities
        - mlflow.projects
        - mlflow.protos
        - mlflow.rfunc
        - mlflow.store
        - mlflow.tracking
        - mlflow.utils
      commands:
        - mlflow --help
        - pip list | grep "mlflow-skinny \+${PKG_VERSION}"  # [unix]
        - pip check
        - set  # [win]
      requires:
        - pip
  - name: mlflow
    script: build-mlflow.sh  # [unix]
    script: build-mlflow.bat  # [win]
    version: {{ version }}
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - pip
        - python
        - setuptools
        - {{ pin_subpackage('mlflow-ui', exact=True) }}
      run:
        - {{ pin_subpackage('mlflow-ui', exact=True) }}
        - alembic <2,!=1.10
        - docker-py >=4.0.0,<8
        - flask <4
        - gunicorn <24  # [not win]
        - numpy <3
        - pandas <3
        - prometheus_flask_exporter <1
        - querystring_parser <2
        - scipy <2
        - sqlalchemy >=1.4.0,<3
        - waitress <4  # [win]
        - scikit-learn <2
        - pyarrow <20,>=4.0.0
        - markdown <4,>=3.3
        - jinja2 <4,>=3.0  # [win]
        - jinja2 <4,>=2.11  # [not win]
        - matplotlib-base <4
        - graphene <4
        - fastapi <1
        - uvicorn <1
    test:
      imports:
        - mlflow
        - mlflow.entities
        - mlflow.models
        - mlflow.projects
        - mlflow.protos
        - mlflow.pyfunc
        - mlflow.pytorch
        - mlflow.rfunc
        - mlflow.sagemaker
        - mlflow.server
        - mlflow.server.prometheus_exporter
        - mlflow.store
        - mlflow.tracking
        - mlflow.utils
      commands:
        - mlflow --help
        # This should not be packaged
        - test ! -f $SP_DIR/pylint_plugins  # [unix]
        - pip check
        - pip list | grep "mlflow \+${PKG_VERSION}"  # [unix]
        - set  # [win]
      requires:
        - pip

  - name: mlflow-ui-dbg
    version: {{ version }}
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - python
        - pip
        # Prevent solver errors with pandas
        - setuptools
        - {{ pin_subpackage('mlflow', exact=True) }}
      run:
        - python
        - {{ pin_subpackage('mlflow', exact=True) }}
    script: build-mlflow.bat  # [win]
    script: build-mlflow.sh  # [unix]
    test:
      commands:
        - exit 0

  - name: mlflow-skinny-gateway
    build:
      noarch: python
      # Skip this package for cross-builds. We will only need a single upload anyways
      skip: true  # [not linux64]
    requirements:
      host:
        - python
        - pip
        # Prevent solver errors with pandas
        - setuptools
        - {{ pin_subpackage('mlflow-skinny', exact=True) }}
      run:
        - python
        - {{ pin_subpackage('mlflow-skinny', exact=True) }}
        - pydantic >=1.0,<3
        - watchfiles <1
        - aiohttp <4
        - boto3 >=1.28.56,<2
    test:
      imports:
        - mlflow.gateway

  - name: mlflow-gateway
    build:
      noarch: python
      # Skip this package for cross-builds. We will only need a single upload anyways
      skip: true  # [not linux64]
    requirements:
      host:
        - python
        - pip
        # Prevent solver errors with pandas
        - setuptools
        - {{ pin_subpackage('mlflow', exact=True) }}
        - {{ pin_subpackage('mlflow-skinny-gateway', exact=True) }}
      run:
        - python
        - {{ pin_subpackage('mlflow', exact=True) }}
        - {{ pin_subpackage('mlflow-skinny-gateway', exact=True) }}
    test:
      imports:
        - mlflow.gateway


  - name: mlflow-ui
    version: {{ version }}
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - nodejs 20.*
        - yarn
      host:
        - python
        - pip
        - setuptools
        - {{ pin_subpackage('mlflow-skinny', exact=True) }}
      run:
        - python
        - {{ pin_subpackage('mlflow-skinny', exact=True) }}
        - flask <4
        - gunicorn <24  # [not win]
        - waitress <4  # [win]
        - querystring_parser <2
    script: build-mlflow.bat  # [win]
    script: build-mlflow.sh  # [unix]
    test:
      commands:
        - mlflow --help
        - test -f $SP_DIR/mlflow/server/js/build/index.html               # [unix]
        - if not exist %SP_DIR%\mlflow\server\js\build\index.html exit 1  # [win]


about:
  home: https://mlflow.org/
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE
  summary: MLflow is an open source platform for the machine learning lifecycle.
  doc_url: https://mlflow.org
  dev_url: https://github.com/mlflow/mlflow

extra:
  feedstock-name: mlflow
  recipe-maintainers:
    - TomeHirata
    - daniellok-db
    - B-Step62
    - serena-ruan
    - BenWilson2
    - WeichenXu123
    - harupy
    - dbczumar
    - jaroslawk
    - xhochy
    - janjagusch
